# Basic Operations
print(0), 0
print(1), 1
print(-0), 0
print(42), 42
print(-42), -42

# Basic Arithmetic
print(1 + 1), 2
print(5 - 3), 2
print(4 * 3), 12
print(8 / 2), 4
print(2 ** 3), 8

# Operator Precedence
print(2 + 3 * 4), 14
print(2 * 3 + 4), 10
print(8 - 2 * 3), 2
print(10 / 2 + 3), 8
print(2 ** 2 * 3), 12
print(2 * 2 ** 3), 16

# Complex Expressions
print((2 + 3) * 4), 20
print(8 / (2 + 2)), 2
print(2 * (3 + 4) * (1 + 2)), 42
print(((1 + 2) * 3) + (4 * (5 - 1))), 25
print((2 + 3 * 4) ** 2), 196

# Edge Cases with Zero
print(0 + 0), 0
print(0 - 0), 0
print(0 * 0), 0
print(1 / 1), 1
print(2 ** 0), 1
print(0 ** 2), 0

# Edge Cases with Negative Numbers
print(-2 + 3), 1
print(-2 - 3), -5
print(-2 * 3), -6
print(-8 / 2), -4
print((-2) ** 2), 4
print(-2 ** 2), -4

# Complex Combinations
print(-2 * (3 + 4) + 1), -13
print(2 ** 2 ** 3), 256
print(3 * -2 ** 2), -12
print((1 + 2 * 3) ** 2 - 1), 48
print(2 * 3 + 4 * 5 - 6 / 2), 23

# Floating Point Operations
print(5 / 2), 2.5
print(3 + 4.5), 7.5
print(2.5 * 2), 5
print(10 / 4 + 2.5), 5
print(2.5 ** 2), 6.25

# Expressions with Multiple Operators
print(1 + 2 + 3 + 4), 10
print(1 - 2 - 3 - 4), -8
print(2 * 3 * 4 * 5), 120
print(16 / 4 / 2), 2
print(2 ** 2 ** 2), 16
print(-2 ** 2 ** 2), -16
print(-2 * -2), 4

# Large Numbers
print(999 + 1), 1000
print(1000 - 999), 1
print(100 * 100), 10000
print(1000 / 10), 100
print(2 ** 10), 1024

# Parentheses Nesting
print(((2 + 3) * (4 + 5))), 45
print((2 + (3 * 4) + 5)), 19
print(((1 + 2) ** (2 + 1))), 27
print((10 / (2 + 3))), 2
print((2 * (3 + (4 * 5)))), 46
